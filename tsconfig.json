{
  "compilerOptions": {
    /* 基本选项 */
    "target": "ESNext",            // 编译目标ECMAScript版本
    "useDefineForClassFields": true, // 使用标准的类字段定义
    "module": "ESNext",              // 使用的模块系统
    "lib": ["ESNext", "DOM"],      // 编译时包含的库文件
    "skipLibCheck": true,          // 跳过对所有声明文件 (*.d.ts) 的类型检查，提高编译速度

    /* 模块解析 */
    "moduleResolution": "bundler", // 现代打包工具（如Vite）推荐的模块解析策略
    "allowImportingTsExtensions": true, // 允许导入带 .ts 后缀的文件
    "resolveJsonModule": true,     // 允许导入 .json 文件
    "isolatedModules": true,       // 确保每个文件都可以被安全地独立编译，Vite要求
    "noEmit": true,                // 不生成输出文件，因为Vite/Rollup会处理打包

    /* 源代码映射 */
    "sourceMap": true,             // 生成 .map 文件，方便调试

    /* JavaScript 支持 */
    "allowJs": true,               // ✅ 关键：允许编译JS文件，这是渐进式迁移的基石
    "checkJs": false,              // 不检查JS文件中的错误

    /* 严格类型检查 */
    "strict": true,                // 启用所有严格类型检查选项
    "noUnusedLocals": true,        // 报告未使用的局部变量
    "noUnusedParameters": true,    // 报告未使用的参数
    "noFallthroughCasesInSwitch": true, // 报告switch语句中的fallthrough情况

    /* 路径别名 */
    "baseUrl": ".",                // 解析非相对模块名的基准目录
    "paths": {
      "@/*": ["src/*"]            // 设置别名，例如 import ... from '@/utils/logger'
    }
  },
  "include": ["src", "vite.config.ts"], // 告诉TS编译器需要检查哪些文件
  "references": [{ "path": "./tsconfig.node.json" }] // 引用Node环境的配置
}
